[alias]
	cb = !git branch --all | grep -v '^[*+]' | awk '{print $1}' | fzf -0 --preview 'git show --color=always {-1}' | sed 's/remotes\\/origin\\///g' | xargs -r git checkout
	alias = !git config -l | grep alias
	cb = !git branch --all | grep -v '^[*+]' | awk '{print $1}' | fzf -0 --preview 'git show --color=always {-1}' | sed 's/remotes\\/origin\\///g' | xargs -r git checkout
	up = fetch --all --prune
	undo = reset --soft HEAD^
	s = status
	co = checkout
	lg = log --graph --decorate --pretty=format:'%C(yellow)%h%C(reset) -%C(red)%d%C(reset) %s %C(green)(%cr) %C(bold blue)<%an>%C(reset)'
	b = !git for-each-ref --sort='-authordate' --format='%(authordate)%09%(objectname:short)%09%(refname)' refs/heads | sed -e 's-refs/heads/--'
	bhistory = log --graph --oneline --decorate --abbrev-commit --first-parent --pretty=format:'%C(yellow)%h%C(reset) -%C(red)%d%C(reset) %s %C(green)(%cr) %C(bold blue)<%an>%C(reset)'
	overview = log --graph --oneline --decorate --all
	gone = !git branch -vv | grep 'origin/.*: gone]' | awk '{print $1}'
	gone-delete = !git branch -vv | grep 'origin/.*: gone]' | awk '{print $1}' | xargs git branch -D
	start-over = "!git reset --hard origin/$(git symbolic-ref --short HEAD); git clean -fd"
	please = push --force-with-lease
	uncommit = reset --soft HEAD~1

  crap = ls-files -c -i --exclude-standard
	fixup = !git log -n 50 --pretty=format:\"%h %s\" --no-merges | fzf | cut -c -7 | xargs -o git commit --fixup
	#lg = lg1
  #lg1 = lg1-specific --all
  #lg2 = lg2-specific --all
  #lg3 = lg3-specific --all

  #lg1-specific = log --graph --abbrev-commit --decorate --format=format:'%C(bold yellow)%h%C(reset) - %C(white)%s%C(reset) %C(bold green)(%ar)%C(reset) %C(dim white)%an%C(reset)%C(auto)%d%C(reset) '
  #lg2-specific = log --graph --abbrev-commit --decorate --format=format:'%C(bold blue)%h%C(reset) - %C(bold cyan)%aD%C(reset) %C(bold green)(%ar)%C(reset)%C(auto)%d%C(reset)%n''          %C(white)%s%C(reset) %C(dim white)- %an%C(reset)'
  #lg3-specific = log --graph --abbrev-commit --decorate --format=format:'%C(bold blue)%h%C(reset) - %C(bold cyan)%aD%C(reset) %C(bold green)(%ar)%C(reset) %C(bold cyan)(committed: %cD)%C(reset) %C(auto)%d%C(reset)%n''          %C(white)%s%C(reset)%n''          %C(dim white)- %an <%ae> %C(reset) %C(dim white)(committer: %cn <%ce>)%C(reset)'
[core]
  pager = delta
[interactive]
  diffFilter = delta --color-only
[delta]
  true-color = always
  navigate = true
  light = false
  side-by-side = true
  line-numbers = true
  diff-so-fancy = true
  hyperlinks = true
  hyperlinks-file-link-format = vscode://file/{path}:{line}
[diff]
  colorMoved = default
  guitool = vscode
[difftool "vscode"]
  cmd = \"code\" --new-window --wait --diff \"$LOCAL\" \"$REMOTE\"
  path = code
[merge]
  tool = vscode
  conflictstyle = diff3
  guitool = vscode
[mergetool "vscode"]
  cmd = \"code\" --new-window --wait --merge \"$REMOTE\" \"$LOCAL\" \"$BASE\" \"$MERGED\"
  path = code
[fetch]
  prune = true
[pull]
  rebase = true
[push]
  followTags = true
  default = current
[rebase]
  autoStash = false
  autosquash = false
  updateRefs = false
[init]
  defaultBranch = main
[include]
  path = ~/.gitconfig.local
[rerere]
  enabled = true
[maintenance]
  repo = D:/git/lernia/Lernia.Se.Mono
